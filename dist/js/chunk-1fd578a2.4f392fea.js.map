{"version":3,"sources":["webpack:///./node_modules/fluro-vue-ui/src/components/content/edit/panels/process.vue?a209","webpack:///./node_modules/fluro-vue-ui/src/components/content/edit/panels/process.vue?f45f","webpack:///./node_modules/fluro-vue-ui/src/components/content/edit/panels/process.vue?4cdb","webpack:///./node_modules/fluro-vue-ui/src/components/content/edit/panels/process.vue","webpack:///node_modules/fluro-vue-ui/src/components/content/edit/panels/process.vue","webpack:///./node_modules/fluro-vue-ui/src/components/content/edit/FluroContentEditMixin.js"],"names":["_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_css_loader_index_js_ref_8_oneOf_1_1_vue_loader_lib_loaders_stylePostLoader_js_postcss_loader_src_index_js_ref_8_oneOf_1_2_sass_loader_lib_loader_js_ref_8_oneOf_1_3_vuetify_loader_lib_loader_js_cache_loader_dist_cjs_js_ref_0_0_vue_loader_lib_index_js_vue_loader_options_process_vue_vue_type_style_index_0_id_030b1035_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_css_loader_index_js_ref_8_oneOf_1_1_vue_loader_lib_loaders_stylePostLoader_js_postcss_loader_src_index_js_ref_8_oneOf_1_2_sass_loader_lib_loader_js_ref_8_oneOf_1_3_vuetify_loader_lib_loader_js_cache_loader_dist_cjs_js_ref_0_0_vue_loader_lib_index_js_vue_loader_options_process_vue_vue_type_style_index_0_id_030b1035_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","attrs","contain","justified","scopedSlots","_u","key","fn","context","$vuetify","breakpoint","mdAndUp","_e","proxy","heading","_t","staticClass","xs12","sm8","staticStyle","background","sm","align-center","_v","_s","title","shrink","$fluro","access","canViewItem","reference","directives","name","rawName","small","content","icon","on","click","$event","global","view","canEditItem","edit","padding","max-height","id","definition","type","_type","margin","form-fields","formFields","outline","showOutline","options","field","referenceItemField","model","value","callback","$$v","expression","fields","length","$set","forms","receivedForms","_l","form","_f","received","awaitingForms","color","loading","resending","_id","resend","right","sent","list","index","state","remove","removeTaskList","input","dispatchUpdate","taskLists","addTaskList","sm4","fieldHash","dueDate","stateField","showLabel","contacts","assignedTo","staticRenderFns","panels_processvue_type_script_lang_js_","processvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","installComponents_default","VBtn","VContainer","VFlex","VInput","VLabel","VLayout","props","Array","default","array","addField","details","push","minimum","maximum","placeholder","params","restrictType","directive","created","data","mixins","_FluroContentEditMixin__WEBPACK_IMPORTED_MODULE_2__","components","FluroContentView","_view_FluroContentView_vue__WEBPACK_IMPORTED_MODULE_3__","FluroTaskList","_form_tasklist_FluroTaskList_vue__WEBPACK_IMPORTED_MODULE_4__","methods","self","lists","$delete","slice","proposedTitle","newList","autofocus","tasks","currentState","concat","existingList","_","find","user","firstName","cardID","utils","getStringID","formID","api","put","then","res","notify","catch","err","error","newModel","update","asyncComputed","computed","_Users_cadeembery_code_boilerplate_node_modules_babel_runtime_corejs2_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","vuex_map_fields__WEBPACK_IMPORTED_MODULE_5__","chain","get","map","types","readable","description","currentStateName","states","item","filter","entry","interaction","_form_FluroContentForm__WEBPACK_IMPORTED_MODULE_0__","_form_FluroContentFormField__WEBPACK_IMPORTED_MODULE_1__","_mixins_Layout__WEBPACK_IMPORTED_MODULE_2__","config","require","String","[object Object]","extends","FluroContentForm","FluroContentFormField"],"mappings":"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","file":"js/chunk-1fd578a2.4f392fea.js","sourcesContent":["import mod from \"-!../../../../../../mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../css-loader/index.js??ref--8-oneOf-1-1!../../../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../../../postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../../../../vuetify-loader/lib/loader.js!../../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../../vue-loader/lib/index.js??vue-loader-options!./process.vue?vue&type=style&index=0&id=030b1035&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../../../../mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../css-loader/index.js??ref--8-oneOf-1-1!../../../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../../../postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../../../../vuetify-loader/lib/loader.js!../../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../../vue-loader/lib/index.js??vue-loader-options!./process.vue?vue&type=style&index=0&id=030b1035&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('flex-column',[(_vm.loading)?[_c('fluro-page-preloader',{attrs:{\"contain\":\"\"}})]:_c('tabset',{attrs:{\"justified\":true},scopedSlots:_vm._u([{key:\"menuprefix\",fn:function(){return [(_vm.context == 'edit' && _vm.$vuetify.breakpoint.mdAndUp)?void 0:_vm._e()]},proxy:true}])},[_c('tab',{attrs:{\"heading\":\"Card Details\"}},[_vm._t(\"default\",[_c('flex-row',[_c('v-flex',{staticClass:\"main\",attrs:{\"xs12\":\"\",\"sm8\":\"\"}},[_c('flex-column-body',{staticStyle:{\"background\":\"#fafafa\"}},[_c('v-container',[_c('constrain',{attrs:{\"sm\":\"\"}},[(_vm.reference)?[_c('fluro-panel',[_c('fluro-panel-title',{staticClass:\"border-bottom\"},[_c('v-layout',{attrs:{\"align-center\":\"\"}},[_c('v-flex',[_c('h5',[_vm._v(_vm._s(_vm.title))])]),_c('v-flex',{attrs:{\"shrink\":\"\"}},[(_vm.$fluro.access.canViewItem(_vm.reference))?_c('v-btn',{directives:[{name:\"tippy\",rawName:\"v-tippy\"}],staticClass:\"ma-0\",attrs:{\"small\":\"\",\"content\":\"View\",\"icon\":\"\"},on:{\"click\":function($event){return _vm.$fluro.global.view(_vm.reference, true)}}},[_c('fluro-icon',{attrs:{\"icon\":\"external-link\"}})],1):_vm._e(),(_vm.$fluro.access.canEditItem(_vm.reference))?_c('v-btn',{directives:[{name:\"tippy\",rawName:\"v-tippy\"}],staticClass:\"ma-0\",attrs:{\"small\":\"\",\"content\":\"Edit\",\"icon\":\"\"},on:{\"click\":function($event){return _vm.$fluro.global.edit(_vm.reference, true)}}},[_c('fluro-icon',{attrs:{\"icon\":\"pencil\"}})],1):_vm._e()],1)],1)],1),_c('fluro-panel-body',{staticStyle:{\"padding\":\"0\"}},[_c('flex-column-body',{staticStyle:{\"max-height\":\"50vh\"}},[_c('fluro-content-view',{attrs:{\"id\":_vm.reference,\"definition\":_vm.reference.definition,\"type\":_vm.reference._type}})],1)],1)],1)]:[_c('h3',{attrs:{\"margin\":\"\"}},[_vm._v(_vm._s(_vm.title))]),_c('fluro-content-form-field',{attrs:{\"form-fields\":_vm.formFields,\"outline\":_vm.showOutline,\"options\":_vm.options,\"field\":_vm.referenceItemField},model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}})],(_vm.definition && _vm.definition.fields.length)?[_c('fluro-content-form',{attrs:{\"options\":_vm.options,\"fields\":_vm.definition.fields},model:{value:(_vm.model.data),callback:function ($$v) {_vm.$set(_vm.model, \"data\", $$v)},expression:\"model.data\"}})]:_vm._e(),(_vm.model.forms && _vm.model.forms.length)?[(_vm.receivedForms && _vm.receivedForms.length)?_c('v-input',{staticClass:\"no-flex\"},[_c('v-label',[_vm._v(\"Received \"+_vm._s(_vm.receivedForms.length)+\" Form Responses\")]),_c('p',{staticClass:\"help-block\"},[_vm._v(\"These forms have not yet been submitted\")]),_c('list-group',_vm._l((_vm.receivedForms),function(form){return _c('list-group-item',[_c('strong',[_c('fluro-icon',{attrs:{\"type\":\"form\"}}),_vm._v(\" \"+_vm._s(form.form.title)+\"\\n                                                    \")],1),_c('div',{staticClass:\"sm\"},[_c('span',{staticClass:\"status-label active\"},[_c('fluro-icon',{attrs:{\"icon\":\"check\"}}),_vm._v(\" Received \")],1),_vm._v(\" \"+_vm._s(_vm._f(\"formatDate\")(form.received,'h:mma ddd MMM YYYY'))+\" \"),_c('span',{staticClass:\"muted\"},[_vm._v(_vm._s(_vm._f(\"timeago\")(form.received)))])])])}),1)],1):_vm._e(),(_vm.awaitingForms && _vm.awaitingForms.length)?_c('v-input',{staticClass:\"no-flex\"},[_c('v-label',[_vm._v(\"Awaiting \"+_vm._s(_vm.awaitingForms.length)+\" Form Responses\")]),_c('p',{staticClass:\"help-block\"},[_vm._v(\"These forms have not yet been submitted\")]),_c('list-group',_vm._l((_vm.awaitingForms),function(form){return _c('list-group-item',{scopedSlots:_vm._u([{key:\"right\",fn:function(){return [_c('v-btn',{attrs:{\"small\":\"\",\"color\":\"primary\",\"loading\":_vm.resending[form.form._id]},on:{\"click\":function($event){return _vm.resend(form)}}},[_vm._v(\"\\n                                                            Resend\\n                                                            \"),_c('fluro-icon',{attrs:{\"right\":\"\",\"icon\":\"paper-plane\"}})],1)]},proxy:true}],null,true)},[_c('strong',[_c('fluro-icon',{attrs:{\"type\":\"form\"}}),_vm._v(\" \"+_vm._s(form.form.title)+\"\\n                                                    \")],1),_c('div',{staticClass:\"sm\"},[_vm._v(\"\\n                                                        Sent \"+_vm._s(_vm._f(\"timeago\")(form.sent))+\" - \"),_c('span',{staticClass:\"status-label draft\"},[_c('fluro-icon',{attrs:{\"icon\":\"clock\"}}),_vm._v(\" Awaiting form response\")],1)])])}),1)],1):_vm._e()]:_vm._e(),[_vm._l((_vm.model.taskLists),function(list,index){return _c('fluro-task-list',{attrs:{\"state\":_vm.model.state,\"definition\":_vm.definition},on:{\"remove\":function($event){return _vm.removeTaskList(index)},\"input\":_vm.dispatchUpdate},model:{value:(_vm.model.taskLists[index]),callback:function ($$v) {_vm.$set(_vm.model.taskLists, index, $$v)},expression:\"model.taskLists[index]\"}})}),_c('span',{staticClass:\"horizontal-rule\"}),_c('v-btn',{staticClass:\"ml-0\",on:{\"click\":function($event){return _vm.addTaskList()}}},[_vm._v(\"\\n                                            Add Task List\\n                                            \"),_c('fluro-icon',{attrs:{\"right\":\"\",\"icon\":\"plus\"}})],1)]],2)],1)],1)],1),_c('v-flex',{staticClass:\"sidebar\",attrs:{\"xs12\":\"\",\"sm4\":\"\"}},[_c('flex-column-body',[_c('v-container',[_c('fluro-content-form-field',{attrs:{\"form-fields\":_vm.formFields,\"outline\":_vm.showOutline,\"options\":_vm.options,\"field\":_vm.fieldHash.dueDate},model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}}),_c('fluro-content-form-field',{attrs:{\"form-fields\":_vm.formFields,\"outline\":_vm.showOutline,\"options\":_vm.options,\"field\":_vm.stateField},model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}}),_c('v-input',{staticClass:\"no-flex\"},[_c('v-label',[_vm._v(\"Key Contacts\")]),_c('p',{staticClass:\"help-block\"},[_vm._v(\"This card does not reference a contact, Here you can specify who should be sent Automated SMS and Mailouts as this card progresses\")]),_c('fluro-content-form-field',{attrs:{\"form-fields\":_vm.formFields,\"showLabel\":false,\"outline\":_vm.showOutline,\"options\":_vm.options,\"field\":_vm.fieldHash.contacts},model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}})],1),_c('v-input',{staticClass:\"no-flex\"},[_c('v-label',[_vm._v(\"Assigned To\")]),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Assign who is in charge of this card\")]),_c('fluro-content-form-field',{attrs:{\"form-fields\":_vm.formFields,\"showLabel\":false,\"outline\":_vm.showOutline,\"options\":_vm.options,\"field\":_vm.fieldHash.assignedTo},model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}})],1)],1)],1)],1)],1)])],2)],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../../../thread-loader/dist/cjs.js!../../../../../../babel-loader/lib/index.js!../../../../../../vuetify-loader/lib/loader.js!../../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../../vue-loader/lib/index.js??vue-loader-options!./process.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../../../thread-loader/dist/cjs.js!../../../../../../babel-loader/lib/index.js!../../../../../../vuetify-loader/lib/loader.js!../../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../../vue-loader/lib/index.js??vue-loader-options!./process.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./process.vue?vue&type=template&id=030b1035&scoped=true&\"\nimport script from \"./process.vue?vue&type=script&lang=js&\"\nexport * from \"./process.vue?vue&type=script&lang=js&\"\nimport style0 from \"./process.vue?vue&type=style&index=0&id=030b1035&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"030b1035\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/Users/cadeembery/code/boilerplate/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VContainer } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VInput } from 'vuetify/lib'\nimport { VLabel } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VContainer,VFlex,VInput,VLabel,VLayout})\n","<template>\n    <flex-column>\n        <template v-if=\"loading\">\n            <fluro-page-preloader contain />\n        </template>\n        <!-- :vertical=\"true\" -->\n        <tabset v-else :justified=\"true\">\n            <template v-slot:menuprefix>\n                <template v-if=\"context == 'edit' && $vuetify.breakpoint.mdAndUp\">\n                    <!-- <flex-column-header style=\"text-align:center\"> -->\n                    <!-- <div style=\"padding: 10px;max-width:200px;margin: auto;\"> -->\n                    <!-- <fluro-avatar-update :id=\"model._id\" type=\"contact\" /> -->\n                    <!-- </div> -->\n                    <!-- </flex-column-header> -->\n                </template>\n            </template>\n            <tab heading=\"Card Details\">\n                <slot>\n                    <flex-row>\n                        <v-flex xs12 sm8 class=\"main\">\n                            <flex-column-body style=\"background: #fafafa;\">\n                                <v-container>\n                                    <constrain sm>\n                                        <template v-if=\"reference\">\n                                            <fluro-panel>\n                                                <fluro-panel-title class=\"border-bottom\">\n                                                    <v-layout align-center>\n                                                        <v-flex>\n                                                            <h5>{{title}}</h5>\n                                                        </v-flex>\n                                                        <v-flex shrink>\n                                                            <v-btn small v-tippy content=\"View\" class=\"ma-0\" icon v-if=\"$fluro.access.canViewItem(reference)\" @click=\"$fluro.global.view(reference, true)\">\n                                                                <fluro-icon icon=\"external-link\" />\n                                                            </v-btn>\n                                                            <v-btn small v-tippy content=\"Edit\" class=\"ma-0\" icon v-if=\"$fluro.access.canEditItem(reference)\" @click=\"$fluro.global.edit(reference, true)\">\n                                                                <fluro-icon icon=\"pencil\" />\n                                                            </v-btn>\n                                                            <!-- <v-btn class=\"ma-0\" small icon @click=\"$actions.open([reference])\">\n                                                                <fluro-icon icon=\"ellipsis-h\"/>\n                                                            </v-btn> -->\n                                                        </v-flex>\n                                                    </v-layout>\n                                                </fluro-panel-title>\n                                                <fluro-panel-body style=\"padding:0;\">\n                                                    <!-- <template v-if=\"reference._type == 'contact'\"> -->\n                                                    <!-- </template> -->\n                                                    <!-- <template v-else> -->\n                                                    <!-- <pre>{{reference}}</pre> -->\n                                                    <flex-column-body style=\"max-height:50vh\">\n                                                        <fluro-content-view :id=\"reference\" :definition=\"reference.definition\" :type=\"reference._type\" />\n                                                    </flex-column-body>\n                                                    <!-- </template> -->\n                                                </fluro-panel-body>\n                                            </fluro-panel>\n                                        </template>\n                                        <template v-else>\n                                            <h3 margin>{{title}}</h3>\n                                            <fluro-content-form-field :form-fields=\"formFields\" :outline=\"showOutline\" :options=\"options\" :field=\"referenceItemField\" v-model=\"model\"></fluro-content-form-field>\n                                        </template>\n                                        <template v-if=\"definition && definition.fields.length\">\n                                            <fluro-content-form :options=\"options\" v-model=\"model.data\" :fields=\"definition.fields\"></fluro-content-form>\n                                        </template>\n                                        <template v-if=\"model.forms && model.forms.length\">\n                                            <!-- <h3 margin>Forms</h3> -->\n                                            <v-input class=\"no-flex\" v-if=\"receivedForms && receivedForms.length\">\n                                                <v-label>Received {{receivedForms.length}} Form Responses</v-label>\n                                                <p class=\"help-block\">These forms have not yet been submitted</p>\n                                                <list-group>\n                                                    <list-group-item v-for=\"form in receivedForms\">\n                                                        <strong>\n                                                            <fluro-icon type=\"form\" /> {{form.form.title}}\n                                                        </strong>\n                                                        <div class=\"sm\">\n                                                            <span class=\"status-label active\">\n                                                                <fluro-icon icon=\"check\" /> Received </span> {{form.received | formatDate('h:mma ddd MMM YYYY')}} <span class=\"muted\">{{form.received | timeago}}</span>\n                                                        </div>\n                                                    </list-group-item>\n                                                </list-group>\n                                            </v-input>\n                                            <v-input class=\"no-flex\" v-if=\"awaitingForms && awaitingForms.length\">\n                                                <v-label>Awaiting {{awaitingForms.length}} Form Responses</v-label>\n                                                <p class=\"help-block\">These forms have not yet been submitted</p>\n                                                <list-group>\n                                                    <list-group-item v-for=\"form in awaitingForms\">\n                                                        <strong>\n                                                            <fluro-icon type=\"form\" /> {{form.form.title}}\n                                                        </strong>\n                                                        <div class=\"sm\">\n                                                            Sent {{form.sent | timeago}} - <span class=\"status-label draft\">\n                                                                <fluro-icon icon=\"clock\" /> Awaiting form response</span>\n                                                        </div>\n                                                        <template v-slot:right>\n                                                            <v-btn small color=\"primary\" @click=\"resend(form)\" :loading=\"resending[form.form._id]\">\n                                                                Resend\n                                                                <fluro-icon right icon=\"paper-plane\" />\n                                                            </v-btn>\n                                                        </template>\n                                                    </list-group-item>\n                                                </list-group>\n                                            </v-input>\n                                        </template>\n                                        <template>\n                                            <!-- <task-list ng-model=\"list\" ng-host=\"item\" ng-definition=\"definition\" show-link=\"true\" ng-repeat=\"list in item.taskLists\"></task-list> -->\n                                            <!-- <template> -->\n                                            <fluro-task-list @remove=\"removeTaskList(index)\" @input=\"dispatchUpdate\" v-model=\"model.taskLists[index]\" :state=\"model.state\" :definition=\"definition\" v-for=\"(list, index) in model.taskLists\"></fluro-task-list>\n                                            <!-- </template> -->\n                                            <!-- <pre>{{model.taskLists}}</pre> -->\n                                            <span class=\"horizontal-rule\" />\n                                            <v-btn class=\"ml-0\" @click=\"addTaskList()\">\n                                                Add Task List\n                                                <fluro-icon right icon=\"plus\" />\n                                            </v-btn>\n                                        </template>\n                                    </constrain>\n                                </v-container>\n                            </flex-column-body>\n                        </v-flex>\n                        <v-flex xs12 sm4 class=\"sidebar\">\n                            <flex-column-body>\n                                <v-container>\n                                    <fluro-content-form-field :form-fields=\"formFields\" :outline=\"showOutline\" :options=\"options\" :field=\"fieldHash.dueDate\" v-model=\"model\"></fluro-content-form-field>\n                                    <fluro-content-form-field :form-fields=\"formFields\" :outline=\"showOutline\" :options=\"options\" :field=\"stateField\" v-model=\"model\"></fluro-content-form-field>\n                                    <v-input class=\"no-flex\">\n                                        <v-label>Key Contacts</v-label>\n                                        <p class=\"help-block\">This card does not reference a contact, Here you can specify who should be sent Automated SMS and Mailouts as this card progresses</p>\n                                        <fluro-content-form-field :form-fields=\"formFields\" :showLabel=\"false\" :outline=\"showOutline\" :options=\"options\" :field=\"fieldHash.contacts\" v-model=\"model\"></fluro-content-form-field>\n                                    </v-input>\n                                    <v-input class=\"no-flex\">\n                                        <v-label>Assigned To</v-label>\n                                        <p class=\"help-block\">Assign who is in charge of this card</p>\n                                        <fluro-content-form-field :form-fields=\"formFields\" :showLabel=\"false\" :outline=\"showOutline\" :options=\"options\" :field=\"fieldHash.assignedTo\" v-model=\"model\"></fluro-content-form-field>\n                                    </v-input>\n                                </v-container>\n                            </flex-column-body>\n                        </v-flex>\n                    </flex-row>\n                </slot>\n            </tab>\n            <!-- <tab heading=\"Forms\" v-if=\"model.forms && model.forms.length\">\n                <slot>\n                    <flex-column-body style=\"background: #fafafa;\">\n                        <v-container>\n                            <constrain sm>\n                                <h3 margin>Forms</h3>\n                                <v-input class=\"no-flex\" v-if=\"receivedForms && receivedForms.length\">\n                                    <v-label>Received {{receivedForms.length}} Form Responses</v-label>\n                                    <p class=\"help-block\">These forms have not yet been submitted</p>\n                                    <list-group>\n                                        <list-group-item v-for=\"form in receivedForms\">\n                                            <strong>\n                                                <fluro-icon type=\"form\" /> {{form.form.title}}\n                                            </strong>\n                                            <div class=\"sm\">\n                                                <fluro-icon icon=\"check\" /> Received {{form.received | formatDate('h:mma ddd MMM YYYY')}} {{form.received | timeago}}\n                                            </div>\n                                        </list-group-item>\n                                    </list-group>\n                                </v-input>\n                                <v-input class=\"no-flex\" v-if=\"awaitingForms\">\n                                    <v-label>Awaiting {{awaitingForms.length}} Form Responses</v-label>\n                                    <p class=\"help-block\">These forms have not yet been submitted</p>\n                                    <list-group>\n                                        <list-group-item v-for=\"form in awaitingForms\">\n                                            <strong>\n                                                <fluro-icon type=\"form\" /> {{form.form.title}}\n                                            </strong>\n                                            <div class=\"sm\">Sent {{form.sent | timeago}} - <span class=\"status-label draft\">\n                                                    <fluro-icon icon=\"clock\" /> Awaiting form response</span>\n                                            </div>\n                                            <template v-slot:right>\n                                                <v-btn small color=\"primary\" @click=\"resend(form)\" :loading=\"resending[form.form._id]\">\n                                                    Resend\n                                                    <fluro-icon right icon=\"paper-plane\" />\n                                                </v-btn>\n                                            </template>\n                                        </list-group-item>\n                                    </list-group>\n                                </v-input>\n                            </constrain>\n                        </v-container>\n                    </flex-column-body>\n                </slot>\n            </tab>\n            <tab heading=\"Metadata\" v-if=\"context == 'edit'\">\n                <slot>\n                    <flex-column-body style=\"background: #fafafa;\">\n                        <v-container>\n                            <constrain sm>\n                                <h3 margin>Metadata</h3>\n                                <div v-if=\"model.data\">\n                                    <v-card>\n                                        <v-card-text>\n                                            <h5>Explore Metadata</h5>\n                                            <json-view :deep=\"3\"  :data=\"model.data\" />\n                                        </v-card-text>\n                                    </v-card>\n                                </div>\n                               \n                            </constrain>\n                        </v-container>\n                    </flex-column-body>\n                </slot>\n            </tab> -->\n            <!-- <tab :heading=\"sheet.title\" v-for=\"sheet in sheetDefinitions\">\n                <slot>\n                    <flex-column-body style=\"background: #fafafa;\">\n                        <v-container>\n                            <wrapper xs>\n                                <fluro-content-form-field :form-fields=\"formFields\" :outline=\"showOutline\" @input=\"update\" :options=\"options\" :field=\"sheet.field\" v-model=\"details\"></fluro-content-form-field>\n                            </wrapper>\n                        </v-container>\n                    </flex-column-body>\n                </slot>\n            </tab> -->\n            <!-- <tab heading=\"Classification\">\n                <slot>\n                    <flex-column-body style=\"background: #fafafa;\">\n                        <v-container>\n                            <wrapper xs>\n                                <template v-if=\"contactDefinitions.length\">\n                                    <fluro-content-form-field :form-fields=\"formFields\" :outline=\"showOutline\" @input=\"update\" :options=\"options\" :field=\"definitionField\" v-model=\"model\"></fluro-content-form-field>\n                                </template>\n                                <fluro-realm-select :expanded=\"true\" v-model=\"model.realms\" type=\"contact\" />\n                            </wrapper>\n                        </v-container>\n                    </flex-column-body>\n                </slot>\n            </tab> -->\n        </tabset>\n        <!-- <flex-column-body> -->\n        <!-- <pre>{{details}}</pre> -->\n        <!-- </flex-column-body> -->\n    </flex-column>\n</template>\n<script>\n/////////////////////////////////\n\n// import FluroAcademicSelect from '../../form/FluroAcademicSelect';\n// import FluroRealmSelect from '../../form/realmselect/FluroRealmSelect.vue';\nimport FluroContentEditMixin from '../FluroContentEditMixin';\nimport FluroContentView from '../../view/FluroContentView.vue';\n// import { FluroAvatarUpdate } from 'fluro-vue-ui';\nimport FluroTaskList from '../../../form/tasklist/FluroTaskList.vue';\n\n/////////////////////////////////\n\nimport Vue from 'vue';\n\n\nimport { mapFields } from 'vuex-map-fields';\n\n\n/////////////////////////////////\n\nexport default {\n\n    props: {\n        'fields': {\n            type: Array,\n            default () {\n\n                var array = [];\n\n                ///////////////////////////////////\n\n                addField('title', {\n                    title: 'Title',\n                    minimum: 1,\n                    maximum: 1,\n                    type: 'string',\n                    placeholder: '',\n                })\n\n                ///////////////////////////////////\n\n                addField('contacts', {\n                    title: 'Key Contacts',\n                    minimum: 0,\n                    maximum: 0,\n                    type: 'reference',\n                    params: {\n                        restrictType: 'contact',\n                    }\n                })\n\n\n\n\n\n                ///////////////////////////////////\n\n                addField('dueDate', {\n                    title: 'Due Date',\n                    minimum: 0,\n                    maximum: 1,\n                    type: 'date',\n                    directive: 'datetime-select',\n                    params: {\n\n                    }\n                })\n\n\n                ///////////////////////////////////\n\n                addField('assignedTo', {\n                    title: 'Assigned To',\n                    minimum: 0,\n                    maximum: 0,\n                    type: 'reference',\n                    params: {\n                        restrictType: 'contact',\n                    }\n                })\n\n\n\n                ///////////////////////////////////\n\n                function addField(key, details) {\n                    details.key = key;\n                    array.push(details)\n                    // // Vue.set(self.fields, key, details);\n\n                    // if (details.enabled === false) {\n\n                    // } else {\n                    //     details.enabled = true;\n                    // }\n\n\n                    // var defaultValue = self.getDefaultValue(key, details);\n                    // Vue.set(self.model, key, defaultValue);\n                }\n\n                //Update fields to use the default fields we set above\n                return array;\n            }\n        }\n    },\n\n    created() {\n\n\n        if (!this.model.data) {\n            this.model.data = {};\n        }\n    },\n    mixins: [FluroContentEditMixin],\n    components: {\n        FluroContentView,\n        FluroTaskList,\n        // FluroAvatarUpdate,\n        // FluroContentForm,\n        // FluroRealmSelect,\n        // FluroContentFormField,\n        // FluroAcademicSelect,\n    },\n    methods: {\n        removeTaskList(index) {\n\n            var self = this;\n            var lists = self.model.taskLists;\n\n            self.$delete(lists, index)\n\n            self.$set(self.model, 'taskLists', lists.slice());\n            // self.model.taskLists = self.model.taskLists.splice(index, 1);\n            self.dispatchUpdate();\n        },\n        addTaskList() {\n            var self = this;\n            if (!self.model.taskLists) {\n                self.$set(self.model, 'taskLists', []);\n            }\n\n            var newList = {\n                autofocus: true,\n                tasks: [\n                    // {\n                    //     name: 'New Task',\n                    //     description: '',\n                    //     required: true,\n                    //     guid: self.$fluro.utils.guid(),\n                    // }\n                ],\n            }\n\n            /////////////////////////////////////////////\n            /////////////////////////////////////////////\n\n            var currentState = self.currentState;\n\n            var proposedTitle;\n\n            if (currentState && currentState.title) {\n                proposedTitle = `${currentState.title} tasks`;\n                newList.state = currentState.key;\n            }\n\n            //Check if there is already a task list with this title\n            var existingList = _.find(self.model.taskLists, {\n                title: proposedTitle,\n            })\n\n            //If there is no title or there is already a task list for this state\n            if (!proposedTitle || !proposedTitle.length || existingList) {\n                proposedTitle = `${self.user.firstName}'s tasks`;\n            }\n\n\n            //Check if there is already a task list with this title\n            var existingList = _.find(self.model.taskLists, {\n                title: proposedTitle,\n            })\n\n            /////////////////////////////////////////////\n\n            if (existingList) {\n                proposedTitle = 'Additional Tasks'\n                // console.log('Already exists', proposedTitle);\n                // return;\n            }\n\n            //Use our proposed title\n            newList.title = proposedTitle;\n\n            /////////////////////////////////////////////\n            /////////////////////////////////////////////\n\n            self.model.taskLists.push(newList);\n\n            // console.log('SELF MODEL', self.model)\n            // self.update(self.model)\n            self.dispatchUpdate();\n\n        },\n\n\n        resend(form) {\n\n            var self = this;\n            var cardID = self.$fluro.utils.getStringID(self.model);\n            var formID = self.$fluro.utils.getStringID(form.form);\n            self.$set(self.resending, formID, true);\n\n            return self.$fluro.api.put(`/process/resend/${cardID}/${formID}`)\n                .then(function(res) {\n                    self.$fluro.notify('Form was resent');\n                    self.$set(self.resending, formID, false);\n                })\n                .catch(function(err) {\n                    self.$fluro.error(err);\n                    self.$set(self.resending, formID, false);\n                })\n\n\n\n\n            // this.resending[]\n            // this.$set(form, 'resending', true);\n        },\n        dispatchUpdate(newModel) {\n            this.update(this.model);\n        },\n\n    },\n    asyncComputed: {\n        // devices: {\n        //     default: [],\n        //     get() {\n\n        //         var self = this;\n\n\n        //         if (self.context != 'edit' || !self.itemID) {\n        //             return Promise.resolve([]);\n        //         }\n\n        //         //////////////////////////////////////\n\n        //         return new Promise(function(resolve, reject) {\n\n        //             self.$fluro.api.get(`/contact/${self.itemID}/devices`)\n        //                 .then(function(res) {\n        //                     resolve(_.map(res.data, function(device) {\n        //                         device.pinging = false;\n        //                         return device;\n        //                     }));\n        //                 })\n        //                 .catch(function(err) {\n        //                     reject(err);\n        //                 })\n\n        //         })\n        //     }\n        // },\n    },\n    computed: {\n        ...mapFields('fluro', [\n            'application', //The Fluro application and all of it's permissions and data\n            'user', //The authenticated user if they log in\n        ]),\n\n        referenceItemField() {\n\n            var self = this;\n\n            // console.log('FIELD OPTIONS', this.definition)\n\n            var processTypes = _.chain(this.definition)\n                .get('data.processTypes')\n                .map(function(type) {\n                    return { name: self.$fluro.types.readable(type), value: type };\n                })\n                .value();\n\n\n            return {\n                key: 'item',\n                title: 'Referenced Item',\n                description: 'Select an item to add to this process',\n                minimum: 0,\n                maximum: 1,\n                type: 'reference',\n                // params:{\n                //     restrictType\n                // }\n            }\n        },\n        currentStateName() {\n            return this.model.state;\n        },\n        currentState() {\n            return _.find(this.states, { key: this.currentStateName });\n        },\n        reference() {\n            return this.model.item;\n        },\n        stateField() {\n\n            var self = this;\n            return {\n                title: 'Current State',\n                minimum: 0,\n                maximum: 1,\n                key: 'state',\n                type: 'string',\n                directive: 'select',\n                options: _.map(self.states, function(state) {\n                    // console.log('STATE', state);\n                    return {\n                        name: state.title,\n                        value: state.key,\n                    }\n                })\n            }\n\n\n        },\n        title() {\n            if (this.model) {\n                if (this.model.title && this.model.title.length) {\n                    return this.model.title;\n                }\n\n                if(this.model.item && this.model.item.title) {\n                    return this.model.item.title\n                } \n            }\n\n            return 'New Card';\n        },\n        states() {\n            return _.get(this.definition, 'data.states');\n            // this.definition && this.definition.data ? this.definition.data.states : []\n        },\n        awaitingForms() {\n            var self = this;\n\n            return _.filter(self.model.forms, function(entry) {\n                return !entry.interaction;\n            })\n\n        },\n        receivedForms() {\n            var self = this;\n\n            return _.filter(self.model.forms, function(entry) {\n                return entry.interaction;\n            })\n\n        },\n        showOutline() {\n            return false; //true; //false;//true;//false;//true;\n        },\n    },\n\n    data() {\n        return {\n            resending: {},\n        }\n    },\n}\n</script>\n<style scoped lang=\"scss\">\n.hint {\n    font-size: 10px;\n    opacity: 0.5;\n    color: inherit;\n    display: block;\n\n}\n\n\n.sidebar,\n.main {\n    flex: 1;\n    // border:2px solid pink;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n}\n\n.horizontal-rule {\n    display: block;\n    border-radius: 20px;\n    height: 3px;\n    background: rgba(#000, 0.1);\n    margin: 10px 0;\n}\n\n.sidebar {\n\n    background: rgba(#000, 0.02);\n\n    @media(min-width: 769px) {\n        border-left: 1px solid rgba(#000, 0.05);\n    }\n}\n\n.bordered {\n    border: 1px solid rgba(#000, 0.1);\n    box-shadow: 0 2px 4px rgba(#000, 0.1);\n\n    & /deep/ .tabset-menu {\n        background: #eee;\n    }\n}\n</style>","import FluroContentForm from '../../form/FluroContentForm';\nimport FluroContentFormField from '../../form/FluroContentFormField';\nimport Layout from '../../../mixins/Layout';\n\n\n// import { JSONView } from \"vue-json-component\";\n\n\nexport default {\n    props: {\n        config: {\n            type: Object,\n            require: true,\n        },\n        context: {\n            type: String,\n            default: 'new'\n        }\n    },\n    data() {\n        return {\n            loading: false,\n        }\n    },\n    extends: FluroContentForm,\n    components: {\n        FluroContentForm,\n        FluroContentFormField,\n        // \"json-view\": JSONView,\n    },\n    mixins:[Layout],\n    computed: {\n\n        itemID() {\n            return this.model._id;\n        },\n        definition() {\n            return this.config.definition;\n        },\n    },\n    methods: {\n\n    }\n}"],"sourceRoot":""}